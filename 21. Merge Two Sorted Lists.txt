/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode head = new ListNode(0);
        ListNode result = head;
        while((l1 != null) || (l2 != null)){
            if(l1 == null){
                ListNode temp = new ListNode(l2.val);
                result.next = temp;
                result = result.next;
                l2 = l2.next;
            }
            else if(l2 == null){
                ListNode temp = new ListNode(l1.val);
                result.next = temp;
                result = result.next;
                l1 = l1.next;
            }
            else if(l1.val > l2.val){
                ListNode temp = new ListNode(l2.val);
                result.next = temp;
                result = result.next;
                l2 = l2.next;
            }
            else{
                ListNode temp = new ListNode(l1.val);
                result.next = temp;
                result = result.next;
                l1 = l1.next;
            }
        }
        return head.next;
    }
}